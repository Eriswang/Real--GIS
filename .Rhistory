contains("gii_2019"),
contains("country"))
View(GIIdata_2010_19)
Different_2010_19 <-GIIdata_2010_19 %>%
mutate(difference=(gii_2010 - gii_2019))%>%
dplyr::select(gii_2010,gii_2019,difference,
country)%>%
arrange(desc(difference))
View(Different_2010_19)
library(countrycode)
Different_2010_19$iso = countrycode(Different_2010_19$country,"country.name","iso2c")
View(Different_2010_19)
library(janitor)
library(stringr)
giifinalmap <- Worldshape %>%
clean_names() %>%
left_join(., Different_2010_19, by = c("country" = "country"))
library(tmap)
library(tmaptools)
tm_shape(giifinalmap) +
tm_polygons("difference",
style="pretty",
palette="Blues",
midpoint=NA,
#title="Gender Inequality Difference 2010 & 2019",
alpha = 0.7) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Gender Inequality Difference 2010 & 2019", legend.position = c("right", "bottom")) +
tmap_options(max.categories = 115)
Different_2010_19 <-GIIdata_2010_19 %>%
mutate(difference=(gii_2010 - gii_2019))%>%
dplyr::select(gii_2010,gii_2019,difference,
country)%>%
arrange(desc(difference))
library(countrycode)
Different_2010_19$country = countrycode(Different_2010_19$country,"country.name","iso2c")
library(janitor)
library(stringr)
giifinalmap <- Worldshape %>%
clean_names() %>%
left_join(., Different_2010_19, by = c("country" = "country"))
library(tmap)
library(tmaptools)
tm_shape(giifinalmap) +
tm_polygons("difference",
style="pretty",
palette="Blues",
midpoint=NA,
#title="Gender Inequality Difference 2010 & 2019",
alpha = 0.7) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Gender Inequality Difference 2010 & 2019", legend.position = c("right", "bottom")) +
tmap_options(max.categories = 115)
library(here)
#Globalgenderinequality <- read.csv("HDR21-22_Statistical_Annex_GII_Table.csv")
GIIdata <- read.csv("Composite_indices_complete_time_series.csv")
library(sf)
Worldshape <- st_read("World_Countries_(Generalized)/World_Countries__Generalized_.shp")
library(dplyr)
GIIdata_2010_19<- GIIdata %>%
dplyr::select (contains("gii_2010"),
contains("gii_2019"),
contains("country"))
Different_2010_19 <-GIIdata_2010_19 %>%
mutate(difference=(gii_2010 - gii_2019))%>%
dplyr::select(gii_2010,gii_2019,difference,
country)%>%
arrange(desc(difference))
library(countrycode)
Different_2010_19$country = countrycode(Different_2010_19$country,"country.name","iso2c")
library(janitor)
library(stringr)
giifinalmap <- Worldshape %>%
clean_names() %>%
left_join(., Different_2010_19, by = c("country" = "country"))
library(tmap)
library(tmaptools)
tm_shape(giifinalmap) +
tm_polygons("difference",
style="pretty",
palette="Blues",
midpoint=NA,
#title="Gender Inequality Difference 2010 & 2019",
alpha = 0.7) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Gender Inequality Difference 2010 & 2019", legend.position = c("right", "bottom")) +
tmap_options(max.categories = 115)
library(here)
#Globalgenderinequality <- read.csv("HDR21-22_Statistical_Annex_GII_Table.csv")
GIIdata <- read.csv("Composite_indices_complete_time_series.csv")
library(sf)
Worldshape <- st_read("World_Countries_(Generalized)/World_Countries__Generalized_.shp")
library(dplyr)
GIIdata_2010_19<- GIIdata %>%
dplyr::select (contains("gii_2010"),
contains("gii_2019"),
contains("country"))
Different_2010_19 <-GIIdata_2010_19 %>%
mutate(difference=(gii_2010 - gii_2019))%>%
dplyr::select(gii_2010,gii_2019,difference,
country)%>%
arrange(desc(difference))
library(countrycode)
Different_2010_19$iso = countrycode(Different_2010_19$country,"country.name","iso2c")
library(janitor)
library(stringr)
giifinalmap <- Worldshape %>%
clean_names() %>%
left_join(., Different_2010_19, by = c("country" = "country"))
library(tmap)
library(tmaptools)
tm_shape(giifinalmap) +
tm_polygons("difference",
style="pretty",
palette="Blues",
midpoint=NA,
#title="Gender Inequality Difference 2010 & 2019",
alpha = 0.7) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Gender Inequality Difference 2010 & 2019", legend.position = c("right", "bottom")) +
tmap_options(max.categories = 115)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.4, -0.2, -0.01, 0, 0.1)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
View(Different_2010_19)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.4, -0.2, -0.01, 0, 0.4)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
tmap_mode("view")
tm_shape(giifinalmap) +
tm_polygons("difference", breaks=breaks)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.4, -0.2, 0, 0.2, 0.4)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
tmap_mode("view")
tm_shape(giifinalmap) +
tm_polygons("difference", breaks=breaks)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.1, -0.01, 0, 0.1, 0.2, 0.3, 0.4)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
tmap_mode("view")
tm_shape(giifinalmap) +
tm_polygons("difference", breaks=breaks)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.1, 0, 0.1, 0.2, 0.3, 0.4)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
tmap_mode("view")
tm_shape(giifinalmap) +
tm_polygons("difference", breaks=breaks)
# library for pop up boxes
library(leafpop)
library(leaflet)
#remove the geometry for our pop up boxes to avoid
popup_gii2010 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2010`, country)%>%
popupTable()
popup_gii2019 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2019`, country)%>%
popupTable()
popup_difference <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`difference`, country)%>%
popupTable()
tmap_mode("view")
breaks2=c(0,0.3,0.5,0.7,0.9,1)
pal1 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2010`, bins=breaks2)
pal2 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2019`, bins=breaks2)
pal3 <- colorBin(palette = "YlOrRd",
domain=giifinalmap$`difference`, bins=breaks)
map<- leaflet(giifinalmap) %>%
# add basemap options
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
addProviderTiles(providers$CartoDB.Positron, group = "CartoDB")%>%
#add our polygons, linking to the tables we just made
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_gii2010,
fillOpacity = 0.7,
fillColor = ~pal1(`gii_2010`),
group = "gii_2010") %>%
addPolygons(fillColor = ~pal2(`gii_2019`),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
popup = popup_gii2019,
fillOpacity = 0.7,
group = "gii_2019") %>%
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_difference,
fillOpacity = 0.7,
fillColor = ~pal3(`difference`),
group = "difference") %>%
# add a legend
addLegend(pal = pal3, values = ~`difference`,
group = c("gii_2010","gii_2019","difference"),
position ="bottomleft", title = "gender inequality index") %>%
# specify layers control
addLayersControl(
baseGroups = c("OSM (default)", "Toner", "Toner Lite", "CartoDB"),
overlayGroups = c("gii_2010", "gii_2019","difference"),
options = layersControlOptions(collapsed = FALSE)
)
# plot the map
map
map
# library for pop up boxes (setting 3 pop up boxes:gii_2010, gii_2019 and difference)
library(leafpop)
library(leaflet)
#avoid the geometry for our pop up boxes
popup_gii2010 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2010`, country)%>%
popupTable()
popup_gii2019 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2019`, country)%>%
popupTable()
popup_difference <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`difference`, country)%>%
popupTable()
tmap_mode("view")
## set the colour palettes using our previous breaks
breaks2=c(0,0.3,0.5,0.7,0.9,1)
pal1 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2010`, bins=breaks2)
pal2 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2019`, bins=breaks2)
pal3 <- colorBin(palette = "YlOrRd",
domain=giifinalmap$`difference`, bins=breaks)
map<- leaflet(giifinalmap) %>%
# add basemap options
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
addProviderTiles(providers$CartoDB.Positron, group = "CartoDB")%>%
#add our polygons, linking to the tables we just made
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_gii2010,
fillOpacity = 0.7,
fillColor = ~pal1(`gii_2010`),
group = "gii_2010") %>%
addPolygons(fillColor = ~pal2(`gii_2019`),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
popup = popup_gii2019,
fillOpacity = 0.7,
group = "gii_2019") %>%
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_difference,
fillOpacity = 0.7,
fillColor = ~pal3(`difference`),
group = "difference") %>%
# add a legend
addLegend(pal = pal3, values = ~`difference`,
group = c("gii_2010","gii_2019","difference"),
position ="bottomleft", title = "gender inequality index") %>%
# specify layers control
addLayersControl(
baseGroups = c("OSM (default)", "Toner", "Toner Lite", "CartoDB"),
overlayGroups = c("gii_2010", "gii_2019","difference"),
options = layersControlOptions(collapsed = FALSE)
)
## plot the map
map
library(here)
#Globalgenderinequality <- read.csv("HDR21-22_Statistical_Annex_GII_Table.csv")
GIIdata <- read.csv("Composite_indices_complete_time_series.csv")
library(sf)
Worldshape <- st_read("World_Countries_(Generalized)/World_Countries__Generalized_.shp")
library(dplyr)
GIIdata_2010_19<- GIIdata %>%
dplyr::select (contains("gii_2010"),
contains("gii_2019"),
contains("country"))
Different_2010_19 <-GIIdata_2010_19 %>%
mutate(difference=(gii_2010 - gii_2019))%>%
dplyr::select(gii_2010,gii_2019,difference,
country)%>%
arrange(desc(difference))
library(countrycode)
Different_2010_19$iso = countrycode(Different_2010_19$country,"country.name","iso2c")
library(janitor)
library(stringr)
giifinalmap <- Worldshape %>%
clean_names() %>%
left_join(., Different_2010_19, by = c("country" = "country"))
library(tmap)
library(tmaptools)
tm_shape(giifinalmap) +
tm_polygons("difference",
style="pretty",
palette="Blues",
midpoint=NA,
#title="Gender Inequality Difference 2010 & 2019",
alpha = 0.7) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Gender Inequality Difference 2010 & 2019", legend.position = c("right", "bottom")) +
tmap_options(max.categories = 115)
tmap_mode("plot")
# set the breaks
# for our mapped data
breaks = c(-0.1, 0, 0.1, 0.2, 0.3, 0.4)
# plot each map
tm1 <- tm_shape(giifinalmap) +
tm_polygons("difference",
breaks=breaks,
palette="PuBu")+
tm_legend(show=FALSE)+
tm_layout(frame=FALSE)+
tm_credits("(a)", position=c(0,0.85), size=1)
legend <- tm_shape(giifinalmap) +
tm_polygons("difference",
palette="PuBu") +
tm_scale_bar(position=c(0.2,0.04), text.size=0.6)+
tm_compass(north=0, position=c(0.65,0.6))+
tm_layout(legend.only = TRUE, legend.position=c(0.2,0.25),asp=0.1)+
tm_credits("(b) difference in gender inequality ",
position=c(0.2,0.0), size=0.6)
t=tmap_arrange(tm1, legend, ncol=1)
t
tmap_mode("view")
tm_shape(giifinalmap) +
tm_polygons("difference", breaks=breaks)
# library for pop up boxes (setting 3 pop up boxes:gii_2010, gii_2019 and difference)
library(leafpop)
library(leaflet)
#avoid the geometry for our pop up boxes
popup_gii2010 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2010`, country)%>%
popupTable()
popup_gii2019 <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`gii_2019`, country)%>%
popupTable()
popup_difference <-giifinalmap %>%
st_drop_geometry()%>%
dplyr::select(`difference`, country)%>%
popupTable()
tmap_mode("view")
## set the colour palettes using our previous breaks
breaks2=c(0,0.3,0.5,0.7,0.9,1)
pal1 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2010`, bins=breaks2)
pal2 <- giifinalmap %>%
colorBin(palette = "YlOrRd", domain=.$`gii_2019`, bins=breaks2)
pal3 <- colorBin(palette = "YlOrRd",
domain=giifinalmap$`difference`, bins=breaks)
map<- leaflet(giifinalmap) %>%
# add basemap options
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
addProviderTiles(providers$CartoDB.Positron, group = "CartoDB")%>%
#add our polygons, linking to the tables we just made
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_gii2010,
fillOpacity = 0.7,
fillColor = ~pal1(`gii_2010`),
group = "gii_2010") %>%
addPolygons(fillColor = ~pal2(`gii_2019`),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
popup = popup_gii2019,
fillOpacity = 0.7,
group = "gii_2019") %>%
addPolygons(color="white",
weight = 2,
opacity = 1,
dashArray = "3",
popup = popup_difference,
fillOpacity = 0.7,
fillColor = ~pal3(`difference`),
group = "difference") %>%
# add a legend
addLegend(pal = pal3, values = ~`difference`,
group = c("gii_2010","gii_2019","difference"),
position ="bottomleft", title = "gender inequality index") %>%
# specify layers control
addLayersControl(
baseGroups = c("OSM (default)", "Toner", "Toner Lite", "CartoDB"),
overlayGroups = c("gii_2010", "gii_2019","difference"),
options = layersControlOptions(collapsed = FALSE)
)
## plot the map
map
